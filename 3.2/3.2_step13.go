/*
Представьте что вы работаете в большой компании где используется модульная архитектура. Ваш коллега написал модуль с какой-то логикой (вы не знаете) и передает в вашу программу какие-то данные. Вы же пишете функцию которая считывает две переменных типа string ,  а возвращает число типа int64 которое нужно получить сложением этих строк.


Но не было бы так все просто, ведь ваш коллега не пишет на Go, и он зол из-за того, что гоферам платят больше. Поэтому он решил подшутить над вами и подсунул вам свинью. Он придумал вставлять мусор в строки перед тем как вызывать вашу функцию.


Поэтому предварительно вам нужно убрать из них мусор и конвертировать в числа. Под мусором имеются ввиду лишние символы и спец знаки. Разрешается использовать только определенные пакеты: fmt, strconv, unicode, strings,  bytes. Они уже импортированы, вам ничего импортировать не нужно!

Считывать и выводить ничего не нужно!

Ваша функция должна называться adding() !

Считайте что функция и пакет main уже объявлены!

Sample Input:

%^80 hhhhh20&&&&nd
Sample Output:

100
*/
func adding(x, y string) int64 {
	massx := []rune(x)
	massy := []rune(y)
	mass1 := make([]rune, 0, len(massx))
	mass2 := make([]rune, 0, len(massy))
	for _, elemx := range massx {
		if unicode.IsDigit(elemx) {
			mass1 = append(mass1, elemx)
		}
	}
	for _, elemy := range massy {
		if unicode.IsDigit(elemy) {
			mass2 = append(mass2, elemy)
		}
	}

	c, err := strconv.ParseInt(string(mass1), 10, 64)
	if err != nil {
		panic(err)
	}
	d, err := strconv.ParseInt(string(mass2), 10, 64)
	if err != nil {
		panic(err)
	}
	return c + d
}